<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>444.42</string>
	<key>AMApplicationVersion</key>
	<string>2.9</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>自动操作</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>运行 AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>--———————————————函数定义结束————————————————on getExtension(ALIAS_PATH) --获取文件扩展名	tell application "Finder"		set _filename to name of ALIAS_PATH	end tell	--Mac不能识别的文件类型获取的扩展名是NULL，自行实现获取方法	set ch_filename to characters of _filename	set statement to false	set ch_extension to {}	repeat with i in ch_filename		if contents of i is "." then			set ch_extension to {}			set statement to true			set end of ch_extension to "."		else if contents of i is " " then			set ch_extension to {}			set statement to false		else if statement is true then			set end of ch_extension to contents of i		end if	end repeat	if (count of ch_extension) is 1 then		set ch_extension to {}	end if	set _extension to ch_extension as string	return _extensionend getExtensionon getFileNameWithoutExtn(ALIAS_PATH)	tell application "Finder"		set _filename to name of ALIAS_PATH	end tell	set _extension to getExtension(ALIAS_PATH)	set _name to {}	if _extension is not "" then		set _length to (count of _filename) - (count of _extension)		set end of _name to text 1 thru _length of _filename	else		set _name to _filename	end if	return (_name as string)end getFileNameWithoutExtn--———————————————函数定义结束————————————————on run {input, parameters}	set filelist to input as list		set _sample to item 1 of filelist	set _sampleName to getFileNameWithoutExtn(_sample)	display dialog "请截取文件名，并留下需要保留的文件名区间" &amp; return &amp; "※ 只允许删除头/尾字符" &amp; return &amp; "※ 对该样本的修改会应用于所有选中文件" with title "截取文件名" default answer _sampleName	set _change to text returned of result	set _offset to offset of _change in _sampleName	if _offset is 0 then		display dialog "可能原因为：" &amp; return &amp; "※ 请勿删除中间字符" &amp; return &amp; "※ 文件名请至少保留一个字符" with title "出现错误" buttons {"终止"} default button "终止" with icon caution		error number -128	end if	set start to _offset	set ending to ((count of _sampleName) - _offset - (count of _change) + 2)	set ending to -ending	set _fexist to 0	set _ferror to 0	set _fcount to 0		repeat with i in filelist		set thefile to (contents of i)		tell application "Finder"			set _filename to name of thefile			set _parent to POSIX path of ((container of thefile) as alias)		end tell		set _extension to getExtension(thefile)		set _name to {}		if _extension is not "" then			set _length to (count of _filename) - (count of _extension)			set end of _name to text 1 thru _length of _filename		else			set _name to _filename		end if		if (start - ending - 2) ≥ (count of (characters of (_name as string))) then			set _ferror to _ferror + 1		else			set newname_ch to characters start thru ending of (_name as string)			set newname to newname_ch as string			set newname to newname &amp; _extension			set newFilePath to _parent &amp; newname			tell application "Finder"				if ((exists newFilePath as POSIX file) and (newFilePath is not POSIX path of thefile)) then					set _fexist to _fexist + 1				else					set _fcount to _fcount + 1					set name of thefile to newname				end if			end tell		end if	end repeat		set _debug to ""	if _fexist &gt; 0 then		set _debug to "※ 忽略: " &amp; (_fexist as string) &amp; "个同名文件"	end if	if _ferror &gt; 0 then		set _debug to _debug &amp; "※ 忽略: " &amp; (_ferror as string) &amp; "个文件名长度错误"	end if	display notification _debug with title "成功截取" &amp; _fcount &amp; "个文件名"	return inputend run</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>InputUUID</key>
				<string>28A1D401-A4EB-4974-B413-FA3233EC066E</string>
				<key>Keywords</key>
				<array>
					<string>运行</string>
				</array>
				<key>OutputUUID</key>
				<string>A92F686C-7648-47B5-AFD6-088A25265599</string>
				<key>UUID</key>
				<string>AD09F6B5-AA81-4FEC-9EFF-8598EF94741F</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>348.500000:653.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>applicationBundleID</key>
		<string>com.apple.finder</string>
		<key>applicationBundleIDsByPath</key>
		<dict>
			<key>/System/Library/CoreServices/Finder.app</key>
			<string>com.apple.finder</string>
		</dict>
		<key>applicationPath</key>
		<string>/System/Library/CoreServices/Finder.app</string>
		<key>applicationPaths</key>
		<array>
			<string>/System/Library/CoreServices/Finder.app</string>
		</array>
		<key>inputTypeIdentifier</key>
		<string>com.apple.Automator.fileSystemObject</string>
		<key>outputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>presentationMode</key>
		<integer>15</integer>
		<key>processesInput</key>
		<integer>0</integer>
		<key>serviceApplicationBundleID</key>
		<string>com.apple.finder</string>
		<key>serviceApplicationPath</key>
		<string>/System/Library/CoreServices/Finder.app</string>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.fileSystemObject</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<integer>0</integer>
		<key>systemImageName</key>
		<string>NSActionTemplate</string>
		<key>useAutomaticInputType</key>
		<integer>0</integer>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
